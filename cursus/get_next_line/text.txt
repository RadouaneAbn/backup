    buf needs to point to a valid memory location with a length not smaller than the specified size because of overflow.
    fd should be a valid file descriptor returned from open() to perform the read operation because if fd is NULL then the read should generate an error.
    cnt is the requested number of bytes read, while the return value is the actual number of bytes read. Also, some times read system call should read fewer bytes than cnt.
    Parameters

    fd: file descriptor
    buf: buffer to write data from.
    cnt: length of the buffer.

Return Value

    returns the number of bytes written on success.
    return 0 on reaching the End of File.
    return -1 on error.
    return -1 on signal interrupts.

Important Points about C write

    The file needs to be opened for write operations
    buf needs to be at least as long as specified by cnt because if buf size is less than the cnt then buf will lead to the overflow condition.
    cnt is the requested number of bytes to write, while the return value is the actual number of bytes written. This happens when fd has a less number of bytes to write than cnt.
    If write() is interrupted by a signal, the effect is one of the following:
        If write() has not written any data yet, it returns -1 and sets errno to EINTR.
        If write() has successfully written some data, it returns the number of bytes it wrote before it was interrupted.
